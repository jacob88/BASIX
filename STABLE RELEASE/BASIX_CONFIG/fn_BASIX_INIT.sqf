/*
BASIX was created by jacob88
and is an open-sourced project
available at GitHub
https://github.com/jacob88/BASIX

Note: Do not edit this file unless
      you know what you are doing.
*/

"BASIX_LOG" callExtension "BASIX Startup Initiated";
waitUntil{!(isNil "BASIX_SETTINGS")};
_Settings = call BASIX_SETTINGS;

if (_Settings select 18) then
{
_MissionPBO = format ["%1.pbo",missionName];
if (_MissionPBO in (_Settings select 19)) exitWith
	{
	"BASIX_LOG" callExtension format ["BASIX Disabled For %1", _MissionPBO];
	"BASIX_LOG" callExtension "BASIX Startup Finished";
	};
};

BASIX_KICK = compileFinal "
_kick = (""KICKED"" + (getPlayerUID player) + ""KICKED"");
_return = !(isNil _kick);
_return
";
publicVariable "BASIX_KICK";

BASIX_KICK_ADD = compileFinal '
call compile format ["
[{hint ""BASIX: %1 (%3) Has Been Kicked For: %2"";}, ""BIS_fnc_spawn"", true, false] spawn BIS_fnc_MP;
[{systemChat ""BASIX: %1 (%3) Has Been Kicked For: %2"";}, ""BIS_fnc_spawn"", true, false] spawn BIS_fnc_MP;
[{""BASIX_LOG"" callExtension ""%1 (%3) Has Been Kicked For: %2"";}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP;
",(name player), _this, (getPlayerUID player)];
';
publicVariable "BASIX_KICK_ADD";

BASIX_BAN_ADD = compileFinal '
call compile format ["
KICKED%3KICKED = compileFinal ""_return = true; _return"";
publicVariable ""KICKED%3KICKED"";
[{if !(isServer) then {hint ""BASIX: %1 (%3) Has Been Banned For: %2"";}}, ""BIS_fnc_spawn"", true, false] spawn BIS_fnc_MP;
[{if !(isServer) then {systemChat ""BASIX: %1 (%3) Has Been Banned For: %2"";}}, ""BIS_fnc_spawn"", true, false] spawn BIS_fnc_MP;
[{if (isServer) then {""BASIX_LOG"" callExtension ""%1 (%3) Has Been Banned For: %2"";}}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP;
",(name player), _this, (getPlayerUID player)];
_Settings = call BASIX_SETTINGS;
if (_Settings select 17) then
{
call compile format ["[{if (isServer) then {""BASIX_BAN"" callExtension ""%1, (%2)-%3"";}}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP;",(getPlayerUID player),(name player),_this];
};
';
publicVariable "BASIX_BAN_ADD";

//Greeting
[{
if !(isServer) then
	{
	if (call BASIX_KICK) exitWith {};
	_Settings = call BASIX_SETTINGS;
	CBA_display_ingame_warnings = false;
	sleep 5;
	systemChat "BASIX: This Sever Is Secured By BASIX";
	systemChat format ["BASIX: Welcome %1 (%2)",(name player),(getPlayerUID player)];
	call compile format ["[{""BASIX_LOG"" callExtension ""%1 Has Joined The Server UID:(%2)""}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP", (name player), (getPlayerUID player)];
	player addMPEventHandler ["MPKilled", {if (isServer) then {if ((name (_this select 0)) != "Error: No unit") then {"BASIX_LOG" callExtension format ["%1 Was Killed By %2",(name (_this select 0)),(name (_this select 1))];};};}];
	if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) then
		{
		call compile format ["[{""BASIX_LOG"" callExtension ""%1 Is White Listed UID:(%2)""}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP", (name player), (getPlayerUID player)];
		systemChat "BASIX: Anti-Hack Disabled, You Are Whitelisted";
		};
	if ((_Settings select 13) && ((call BASIX_ISADMIN) != "NotAdmin")) then
		{
		call compile format ["[{""BASIX_LOG"" callExtension ""%1 Is White Listed UID:(%2)""}, ""BIS_fnc_spawn"", false, false] spawn BIS_fnc_MP", (name player), (getPlayerUID player)];
		systemChat ("BASIX: Admin Privileges Added, Level: " + (call BASIX_ISADMIN));
		};
	}
}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;

//Addon Blacklist
if (_Settings select 0) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		if ((count activatedAddons) > 348) then
			{
			for "_i" from 0 to ((count activatedAddons) - 1) do
				{
				_pboName = (activatedAddons select _i) + ".pbo";
				if (_pboName in (_Settings select 1)) exitWith
					{
					_reason = format ["Blacklisted Addon (%1)",_pboName];
					_reason spawn BASIX_BAN_ADD;
					sleep 0.1;
					endMission "LOSER";
					};
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Variable Blacklist
if (_Settings select 2) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		while {true} do
			{
			for "_i" from 0 to ((count (_Settings select 3)) - 1) do
				{
				_varname = ((_Settings select 3) select _i);
				if !(isnil _varname) exitWith
					{
					_reason = format ["Blacklisted Variable (%1)",_varname];
					_reason spawn BASIX_BAN_ADD;
					sleep 0.1;
					endMission "LOSER";
					};
				};
			sleep 30;
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Server Speed Limit
if (_Settings select 4) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		while {true} do
			{
			waitUntil{(((vehicle player) in vehicles) && ((round speed (vehicle player)) > (_Settings select 5)))};
			if (alive player) exitWith
				{
				_reason = format ["Over Server Speed Limit (%1)",(round speed (vehicle player))];
				_reason spawn BASIX_KICK_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Weapon Blacklist
if (_Settings select 6) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		while {true} do
			{
			waitUntil{((currentWeapon player) in (_Settings select 7))};
			if (alive player) exitWith
				{
				_reason = format ["Blacklisted Weapon (%1)",(currentWeapon player)];
				_reason spawn BASIX_KICK_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Vehicle Blacklist
if (_Settings select 8) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		while {true} do
			{
			waitUntil{((TypeOf (vehicle player)) in (_Settings select 9))};
			if (alive player) exitWith
				{
				_reason = format ["Blacklisted Vehicle (%1)",(TypeOf (vehicle player))];
				deleteVehicle (vehicle player);
				_reason spawn BASIX_KICK_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Anti-Teleport
if (_Settings select 10) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		while {true} do
			{
			waitUntil{(alive player)};
			_pos1 = (getPos (vehicle player));
			sleep 1;
			_pos2 = (getPos (vehicle player));
			_tpcheck = _pos1 distance _pos2; 
			if ((vehicle player) in vehicles) then
				{
				if (_tpcheck > 835) exitWith
					{
					_reason = format ["Teleported (%1)",_tpcheck];
					_reason spawn BASIX_KICK_ADD;
					sleep 0.1;
					endMission "LOSER";
					};
				};
			if !((vehicle player) in vehicles) then
				{
				if (_tpcheck > 30) exitWith
					{
					_reason = format ["Teleported (%1)",_tpcheck];
					_reason spawn BASIX_KICK_ADD;
					sleep 0.1;
					endMission "LOSER";
					};
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Addon Whitelist
if (_Settings select 21) then
{
BASIX_ADDON_WHITELIST = compileFinal '
_Settings = call BASIX_SETTINGS;
BASIX_TEMPARRAY = nil;
BASIX_TEMPARRAY = [];
_AddonList = activatedAddons;
{BASIX_TEMPARRAY = BASIX_TEMPARRAY + [(_x + ".pbo")];} forEach _AddonList;
_return = BASIX_TEMPARRAY;
BASIX_TEMPARRAY = nil;
_return = _return + (_Settings select 22);
_return
';
publicVariable "BASIX_ADDON_WHITELIST";

	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		for "_i" from 0 to ((count activatedAddons) - 1) do
			{
			_pboName = ((activatedAddons select _i) + ".pbo");
			_whitelist = (call BASIX_ADDON_WHITELIST);
			if !(_pboName in _whitelist) exitWith
				{
				_reason = format ["NonWhitelisted Addon (%1)",_pboName];
				_reason spawn BASIX_BAN_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Classname Whitelist
if (_Settings select 23) then
{
private["_classes","_cfg","_value","_itemCount"];
_classes = [];
_cfg = ConfigFile;
_itemCount = (count _cfg) - 1;
for "_i" from 0 to _itemCount do
	{
	if (isClass (_cfg select _i)) then
		{
			_classes = _classes + [configName (_cfg select _i)];
		};
	};
_cfg = (ConfigFile >> "CfgPatches");
_itemCount = (count _cfg) - 1;
for "_i" from 0 to _itemCount do
	{
	if (isClass (_cfg select _i)) then
		{
			_classes = _classes + [configName (_cfg select _i)];
		};
	};
_cfg = (ConfigFile >> "CfgFunctions");
_itemCount = (count _cfg) - 1;
for "_i" from 0 to _itemCount do
	{
	if (isClass (_cfg select _i)) then
		{
			_classes = _classes + [configName (_cfg select _i)];
		};
	};
_classes = _classes + (_Settings select 24);
BASIX_CLASSNAME_WHITELIST_TEST = compileFinal (str(_classes));
publicVariable "BASIX_CLASSNAME_WHITELIST_TEST";

	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		private["_classes","_cfg","_value","_itemCount"];
		_classes = [];
		_cfg = ConfigFile;
		_itemCount = (count _cfg) - 1;
		for "_i" from 0 to _itemCount do
			{
			if (isClass (_cfg select _i)) then
				{
					_classes = _classes + [configName (_cfg select _i)];
				};
			};
		_cfg = (ConfigFile >> "CfgPatches");
		_itemCount = (count _cfg) - 1;
		for "_i" from 0 to _itemCount do
			{
			if (isClass (_cfg select _i)) then
				{
				_classes = _classes + [configName (_cfg select _i)];
				};
			};
		_cfg = (ConfigFile >> "CfgFunctions");
		_itemCount = (count _cfg) - 1;
		for "_i" from 0 to _itemCount do
			{
			if (isClass (_cfg select _i)) then
				{
				_classes = _classes + [configName (_cfg select _i)];
				};
			};
		for "_i" from 0 to ((count _classes) -1) do
			{
			_BASIXNOSCAN = ["BASIX_PREM_ADMIN","BASIX_NONPREM_ADMIN","BASIX_ADMIN"];
			if (!((_classes select _i) in (call BASIX_CLASSNAME_WHITELIST_TEST)) && !((_classes select _i) in _BASIXNOSCAN)) exitWith
				{
				_reason = format ["NonWhitelisted Classname (%1)",(_classes select _i)];
				_reason spawn BASIX_BAN_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			if (!((_classes select _i) in (call BASIX_CLASSNAME_WHITELIST_TEST)) && ((_classes select _i) in _BASIXNOSCAN) && ((call BASIX_ISADMIN) == "NotAdmin")) exitWith
				{
				_reason = format ["NonWhitelisted Classname (%1)",(_classes select _i)];
				_reason spawn BASIX_BAN_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//Classname Scanner
if (_Settings select 15) then
{
	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		for "_i" from 0 to ((count (_Settings select 16)) - 1) do
			{
			_classname = ((_Settings select 16) select _i);
			if (isClass (configFile >> _classname)) exitWith
				{
				_reason = format ["Blacklisted Classname (%1)",_classname];
				_reason spawn BASIX_BAN_ADD;
				sleep 0.1;
				endMission "LOSER";
				};
			};
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};

//CheatEngine Injection Scans
if (_Settings select 20) then
{
BASIX_CheatEngine_Scan = compileFinal '
[] spawn {
	_check1 = format ["%1",[[(getWeaponCargo (backpackContainer player)),(getMagazineCargo (backpackContainer player)),(getItemCargo (backpackContainer player))],[(getWeaponCargo (uniformContainer player)),(getMagazineCargo (uniformContainer player)),(getItemCargo (uniformContainer player))],[(getWeaponCargo (vestContainer player)),(getMagazineCargo (vestContainer player)),(getItemCargo (vestContainer player))]]];
	sleep 0.1;
	_check2 = format ["%1",[[(getWeaponCargo (backpackContainer player)),(getMagazineCargo (backpackContainer player)),(getItemCargo (backpackContainer player))],[(getWeaponCargo (uniformContainer player)),(getMagazineCargo (uniformContainer player)),(getItemCargo (uniformContainer player))],[(getWeaponCargo (vestContainer player)),(getMagazineCargo (vestContainer player)),(getItemCargo (vestContainer player))]]];
	if (_check1 != _check2) exitWith
		{
		_reason = "CheatEngine (Spawned Item)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	};
[] spawn {
	_check1 = format ["%1",vehicles];
	sleep 0.1;
	_check2 = format ["%1",vehicles];
	if (_check1 != _check2) exitWith
		{
		_reason = "CheatEngine (Spawned Vehicle)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	};
[] spawn {
	_check1 = format ["%1",(damage player)];
	sleep 0.1;
	_check2 = format ["%1",(damage player)];
	if (_check1 != _check2) exitWith
		{
		_reason = "CheatEngine (Modified Health)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	};
';
publicVariable "BASIX_CheatEngine_Scan";

	[{
	if !(isServer) then
		{
		_Settings = call BASIX_SETTINGS;
		if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
		waitUntil {!(IsNull (findDisplay 46))};
		(findDisplay 46) displayAddEventHandler ["KeyDown", {if ((_this select 1) in (actionKeys "Gear")) then {call BASIX_CheatEngine_Scan;};}];
		}
	}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};


//Anti-BASIX Exploits
[{
if !(isServer) then
	{
	if ((call BASIX_ISADMIN) != "NotAdmin") exitWith {};
	if (isClass (configFile >> "BASIX_PREM_ADMIN")) exitWith
		{
		_reason = "Restricted Classname (BASIX_PREM_ADMIN)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "BASIX_NONPREM_ADMIN")) exitWith
		{
		_reason = "Restricted Classname (BASIX_NONPREM_ADMIN)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "CfgPatches" >> "BASIX_config")) exitWith
		{
		_reason = "Restricted Classname (BASIX_config)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "CfgFunctions" >> "BASIX")) exitWith
		{
		_reason = "Restricted Classname (BASIX)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "CfgFunctions" >> "BASIX" >> "BASIX_CONFIG")) exitWith
		{
		_reason = "Restricted Classname (BASIX_CONFIG)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "CfgFunctions" >> "BASIX" >> "BASIX_CONFIG" >> "BASIX_SETTINGS")) exitWith
		{
		_reason = "Restricted Classname (BASIX_SETTINGS)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	if (isClass (configFile >> "CfgFunctions" >> "BASIX" >> "BASIX_CONFIG" >> "BASIX_INIT")) exitWith
		{
		_reason = "Restricted Classname (BASIX_INIT)";
		_reason spawn BASIX_BAN_ADD;
		sleep 0.1;
		endMission "LOSER";
		};
	}
}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;



//*** Non Anti-Hack Related Stuff Below ***


//Admin Menu
if (_Settings select 13) then
{
BASIX_ISADMIN = compileFinal "
_Settings = call BASIX_SETTINGS;
if !(_Settings select 13) exitWith {};
_return = ""NotAdmin"";
for ""_i"" from 0 to ((count (_Settings select 14)) - 1) do
{
_UID = (((_Settings select 14) select _i) select 0);
_LEVEL = (((_Settings select 14) select _i) select 1);
if ((getPlayerUID player) == _UID) then {_return = _LEVEL;};
};
_return
";
publicVariable "BASIX_ISADMIN";

BASIX_ADMIN_MENU = compileFinal "
_Settings = call BASIX_SETTINGS;
if ((call BASIX_ISADMIN) == ""NotAdmin"") exitWith {};
if (isClass (configFile >> ""BASIX_PREM_ADMIN"")) exitWith {};
if (isClass (configFile >> ""BASIX_NONPREM_ADMIN"")) exitWith
	{
	if (!(createDialog ""BASIX_NONPREM_ADMIN"")) exitWith {hint ""Dialog Error!"";};
	_players = ([] call BIS_fnc_listplayers);
	{lbAdd [1500, (format [""%1"",(name _x)])];} forEach _players;
	lbSetCurSel [1500, 0];
	};
hint ""BASIX: No Admin Menu Installed!"";
";
publicVariable "BASIX_ADMIN_MENU";

BASIX_KEY_COMBO = compileFinal "
_key = (_this select 1);
_shift = (_this select 2);
_ctrl = (_this select 3);
if (dialog) exitWith {};
if ((_key != 15) && !(_ctrl) && !(_shift)) exitWith {};
if ((_key == 15) && (_ctrl) && (_shift)) then
{
call BASIX_ADMIN_MENU;
};
";
publicVariable "BASIX_KEY_COMBO";

[{
if !(isServer) then
	{
	waitUntil {!(IsNull (findDisplay 46))};
	(findDisplay 46) displayAddEventHandler ["KeyDown", {_this call BASIX_KEY_COMBO;}];
	}
}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
};
if !(_Settings select 13) then
{
BASIX_ISADMIN = compileFinal "
_return = ""NotAdmin"";
_return
";
publicVariable "BASIX_ISADMIN";
};

//Player Kick-Loop
[{
if !(isServer) then
	{
	_Settings = call BASIX_SETTINGS;
	if ((_Settings select 11) && ((getPlayerUID player) in (_Settings select 12))) exitWith {};
	while{true}do
		{
		if (call BASIX_KICK) then
			{
			endMission "LOSER";
			};
		sleep 1;
		};
	}
}, "BIS_fnc_spawn", true, true] spawn BIS_fnc_MP;
"BASIX_LOG" callExtension "BASIX Startup Finished";